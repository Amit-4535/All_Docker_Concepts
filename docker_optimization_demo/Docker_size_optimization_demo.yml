

Docker image size optimization demo


docker images | grep imagename

this above command is used to check the image details such as  name of image, image ID, when this was created and the size of the image..


Demo

starting with a heavy Ubuntu-based image, and step-by-step reducing it down using best practices.


Phase 1: Create the Base Directory
mkdir docker-optimize-demo
cd docker-optimize-demo


STEP 1: Basic Ubuntu Image (Unoptimized)
Vi Dockerfile.ubuntu

FROM ubuntu:22.04

RUN apt-get update
RUN apt-get install -y curl

CMD ["curl", "https://ipinfo.io/ip"]



Build & Check Size
docker build -f Dockerfile.ubuntu -t ubuntu-ipcheck .
docker images | grep ubuntu-ipcheck

You’ll see something around 100MB+



STEP 2: Combine RUN Commands + Cleanup APT
Vi Dockerfile.ubuntu-clean

FROM ubuntu:22.04

RUN apt-get update && apt-get install -y curl && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

CMD ["curl", "https://ipinfo.io/ip"]


Build & Check Size
docker build -f Dockerfile.ubuntu-clean -t ubuntu-ipcheck-clean .
docker images | grep ubuntu-ipcheck-clean

You’ll see a size drop (~80–90 MB)



STEP 3: Use Alpine + .dockerignore (Tiny Image)

Vi Dockerfile.alpine

FROM alpine:latest

RUN apk --no-cache add curl

CMD ["curl", "https://ipinfo.io/ip"]


note --
.dockerignore (optional but good practice)
Add these below things in .dockerignore
*.log
*.sh~
.dockerignore
Dockerfile*




Build & Check Size
docker build -f Dockerfile.alpine -t alpine-ipcheck .
docker images | grep alpine-ipcheck

✅ You’ll now see image size as ~5–6 MB 🔥



Compare all images 
docker images | grep imagename



❓ Does using ubuntu, slim, or alpine change the functionality of the commands?
🔹 Short Answer:
✅ Yes and No — the functionality can remain the same if all dependencies are properly installed,
❌ But the command syntax, available tools, and behavior can differ depending on the base image.



1. ubuntu Image
•	Default shell: bash
•	Package manager: apt-get
•	Rich set of tools: curl, ping, bash, etc. (after installing)


  Example command:
RUN apt-get update && apt-get install -y curl


➡️ You get full compatibility for Linux commands and scripts — heavier, but more flexible.

🔸 2. ubuntu-slim or debian-slim
•	Reduced base system — fewer preinstalled tools
•	Same apt-get and bash
•	May lack man pages, build tools, etc.
•	Needs you to install more things manually
✅ Functionality can be the same after installing what’s missing



🔸 3. alpine
•	Default shell: sh (not bash)
•	Package manager: apk (not apt)
•	Musl-libc instead of glibc → Some binaries may not work without compatibility packages
•	Ultra minimal: Only core tools are there
❗️ If your app or command depends on bash, glibc, or apt, you need to install them separately or they won’t work.



important --

Example comparison:
# Ubuntu
RUN apt-get update && apt-get install -y curl

# Alpine
RUN apk --no-cache add curl



🧠 Key Differences that Affect Functionality
Aspect  	  Ubuntu/Debian	        Alpine
Shell	          bash	                sh (BusyBox shell)
Package Manager	  apt, dpkg	        apk
Binary Format	  glibc	                musl
File Locations	  /usr/bin, etc.  	Varies (may be symlinked)
Troubleshooting	  Easier (more tools)	Minimal (must install)


✅ Final Answer: When Functionality Differs
Scenario	                                Functionality
You need Bash in Alpine (not installed)	        ❌ Won’t work without adding bash
You use apt in Alpine	                        ❌ Will fail, Alpine uses apk
You run curl in Alpine but it’s missing	        ❌ Won’t work unless installed
Your app needs glibc (e.g., Java) in Alpine	❌ May crash without glibc compat
Just printing IP via curl (installed)	        ✅ Works fine across all images



✅ What You Should Do
Use Case	                Best Base Image
Lightweight curl/ping tasks	alpine
Full shell scripting/tools	ubuntu or debian
Production web builds	        Multi-stage w/ alpine final
Compatibility matters	        Stick to ubuntu




✅ Example: Same Task — Slightly Different Commands
# Ubuntu
FROM ubuntu:22.04
RUN apt update && apt install -y bash curl
CMD ["bash", "-c", "curl https://ipinfo.io"]


# Alpine
FROM alpine
RUN apk add --no-cache bash curl
CMD ["bash", "-c", "curl https://ipinfo.io"]
✅ Both work — if you account for tool difference








